Pointers (pointer variables) are special variables that are used to store addresses rather than values
  int* p;
  int *p1;
  int * p2;
  int* p1, p2;

Assigning addresses to Pointers
  int* pc, c;
  c = 5;
  pc = &c;
  printf("%d", *pc);   // Output: 5

normal way to print address
  #include <stdio.h>
  int main()
  {
    int var = 5;
    printf("var: %d\n", var);

    // Notice the use of & before var
    printf("address of var: %p", &var);  
    return 0;
  }




Working of Pointers
  #include <stdio.h>
  int main()
  {
     int* pc, c;

     c = 22;
     printf("Address of c: %p\n", &c);
     printf("Value of c: %d\n\n", c);  // 22

     pc = &c;
     printf("Address of pointer pc: %p\n", pc);
     printf("Content of pointer pc: %d\n\n", *pc); // 22

     c = 11;
     printf("Address of pointer pc: %p\n", pc);
     printf("Content of pointer pc: %d\n\n", *pc); // 11

     *pc = 2;
     printf("Address of c: %p\n", &c);
     printf("Value of c: %d\n\n", c); // 2
     return 0;
  }


Another way:
  #include <stdio.h>
  int main() {
     int c = 5;
     int* p = &c;

     printf("%d", *p);  // 5
     return 0; 
  }



array & pointers:
| From the above example, it is clear that &x[0] is equivalent to x. And, x[0] is equivalent to *x.
| Similarly,
| &x[1] is equivalent to x+1 and x[1] is equivalent to *(x+1).
| &x[2] is equivalent to x+2 and x[2] is equivalent to *(x+2).
  ...
| Basically, &x[i] is equivalent to x+i and x[i] is equivalent to *(x+i).




  #include <stdio.h>
  int main() {
    int x[5] = {1, 2, 3, 4, 5};
    int* ptr;

    // ptr is assigned the address of the third element
    ptr = &x[2]; 

    printf("*ptr = %d \n", *ptr);   // 3
    printf("*(ptr+1) = %d \n", *(ptr+1)); // 4
    printf("*(ptr-1) = %d", *(ptr-1));  // 2

    return 0;
  }



Pass Addresses to Functions
  #include <stdio.h>
  void swap(int *n1, int *n2);

  int main()
  {
      int num1 = 5, num2 = 10;

      // address of num1 and num2 is passed
      swap( &num1, &num2);

      printf("num1 = %d\n", num1);
      printf("num2 = %d", num2);
      return 0;
  }

  void swap(int* n1, int* n2)
  {
      int temp;
      temp = *n1;
      *n1 = *n2;
      *n2 = temp;
  }



Passing Pointers to Functions
  #include <stdio.h>

  void addOne(int* ptr) {
    (*ptr)++; // adding 1 to *ptr
  }

  int main()
  {
    int* p, i = 10;
    p = &i;
    addOne(p);

    printf("%d", *p); // 11
    return 0;
  }
